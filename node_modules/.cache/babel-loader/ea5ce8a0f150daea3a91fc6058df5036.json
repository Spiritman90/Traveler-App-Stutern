{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst travelData = {\n  travelRecreationalData: [],\n  travelNewsData: [],\n  destinationName: \"\",\n  travelWeatherData: [],\n  isLoading: false,\n  error: null,\n  isError: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : travelData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ActionTypes.FETCH_DATA_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ActionTypes.GET_RECREATION_CENTRES:\n      return { ...state,\n        travelRecreationalData: payload,\n        isLoading: false,\n        isError: false,\n        error: null\n      };\n\n    case ActionTypes.GET_RECREATION_CENTRES_ERROR:\n      return { ...state,\n        isError: true,\n        error: payload,\n        travelRecreationalData: []\n      };\n\n    case ActionTypes.GET_TRAVEL_NEWS:\n      return { ...state,\n        travelNewsData: payload,\n        isError: false,\n        error: null,\n        isLoading: false\n      };\n\n    case ActionTypes.GET_TRAVEL_NEWS_ERROR:\n      return { ...state,\n        isError: true,\n        error: payload,\n        travelNewsData: []\n      };\n\n    case ActionTypes.GET_WEATHER:\n      return { ...state,\n        travelWeatherData: payload,\n        isLoading: false,\n        isError: false,\n        error: null\n      };\n\n    case ActionTypes.GET_WEATHER_ERROR:\n      return { ...state,\n        isError: true,\n        error: payload,\n        travelWeatherData: []\n      };\n\n    case ActionTypes.DESTINATION_NAME:\n      return { ...state,\n        destinationName: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/oluwafemiadewole/Documents/traveler/src/redux/reducers/reducer.js"],"names":["ActionTypes","travelData","travelRecreationalData","travelNewsData","destinationName","travelWeatherData","isLoading","error","isError","reducer","state","action","type","payload","FETCH_DATA_START","GET_RECREATION_CENTRES","GET_RECREATION_CENTRES_ERROR","GET_TRAVEL_NEWS","GET_TRAVEL_NEWS_ERROR","GET_WEATHER","GET_WEATHER_ERROR","DESTINATION_NAME"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,sBAAsB,EAAE,EADP;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,eAAe,EAAE,EAHA;AAIjBC,EAAAA,iBAAiB,EAAE,EAJF;AAKjBC,EAAAA,SAAS,EAAE,KALM;AAMjBC,EAAAA,KAAK,EAAE,IANU;AAOjBC,EAAAA,OAAO,EAAE;AAPQ,CAAnB;;AAUA,MAAMC,OAAO,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBT,UAAuB;AAAA,MAAXU,MAAW;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,WAAW,CAACc,gBAAjB;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEF,SAAKN,WAAW,CAACe,sBAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,sBAAsB,EAAEW,OAFnB;AAGLP,QAAAA,SAAS,EAAE,KAHN;AAILE,QAAAA,OAAO,EAAE,KAJJ;AAKLD,QAAAA,KAAK,EAAE;AALF,OAAP;;AAQF,SAAKP,WAAW,CAACgB,4BAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,OAAO,EAAE,IAFJ;AAGLD,QAAAA,KAAK,EAAEM,OAHF;AAILX,QAAAA,sBAAsB,EAAE;AAJnB,OAAP;;AAMF,SAAKF,WAAW,CAACiB,eAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELP,QAAAA,cAAc,EAAEU,OAFX;AAGLL,QAAAA,OAAO,EAAE,KAHJ;AAILD,QAAAA,KAAK,EAAE,IAJF;AAKLD,QAAAA,SAAS,EAAE;AALN,OAAP;;AAQF,SAAKN,WAAW,CAACkB,qBAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,OAAO,EAAE,IAFJ;AAGLD,QAAAA,KAAK,EAAEM,OAHF;AAILV,QAAAA,cAAc,EAAE;AAJX,OAAP;;AAOF,SAAKH,WAAW,CAACmB,WAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELL,QAAAA,iBAAiB,EAAEQ,OAFd;AAGLP,QAAAA,SAAS,EAAE,KAHN;AAILE,QAAAA,OAAO,EAAE,KAJJ;AAKLD,QAAAA,KAAK,EAAE;AALF,OAAP;;AAQF,SAAKP,WAAW,CAACoB,iBAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,OAAO,EAAE,IAFJ;AAGLD,QAAAA,KAAK,EAAEM,OAHF;AAILR,QAAAA,iBAAiB,EAAE;AAJd,OAAP;;AAOF,SAAKL,WAAW,CAACqB,gBAAjB;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYN,QAAAA,eAAe,EAAES;AAA7B,OAAP;;AAEF;AACE,aAAOH,KAAP;AA1DJ;AA4DD,CA9DD;;AAgEA,eAAeD,OAAf","sourcesContent":["import { ActionTypes } from \"../constants/action-types\";\n\nconst travelData = {\n  travelRecreationalData: [],\n  travelNewsData: [],\n  destinationName: \"\",\n  travelWeatherData: [],\n  isLoading: false,\n  error: null,\n  isError: false,\n};\n\nconst reducer = (state = travelData, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ActionTypes.FETCH_DATA_START:\n      return { ...state, isLoading: true };\n\n    case ActionTypes.GET_RECREATION_CENTRES:\n      return {\n        ...state,\n        travelRecreationalData: payload,\n        isLoading: false,\n        isError: false,\n        error: null,\n      };\n\n    case ActionTypes.GET_RECREATION_CENTRES_ERROR:\n      return {\n        ...state,\n        isError: true,\n        error: payload,\n        travelRecreationalData: [],\n      };\n    case ActionTypes.GET_TRAVEL_NEWS:\n      return {\n        ...state,\n        travelNewsData: payload,\n        isError: false,\n        error: null,\n        isLoading: false,\n      };\n\n    case ActionTypes.GET_TRAVEL_NEWS_ERROR:\n      return {\n        ...state,\n        isError: true,\n        error: payload,\n        travelNewsData: [],\n      };\n\n    case ActionTypes.GET_WEATHER:\n      return {\n        ...state,\n        travelWeatherData: payload,\n        isLoading: false,\n        isError: false,\n        error: null,\n      };\n\n    case ActionTypes.GET_WEATHER_ERROR:\n      return {\n        ...state,\n        isError: true,\n        error: payload,\n        travelWeatherData: [],\n      };\n\n    case ActionTypes.DESTINATION_NAME:\n      return { ...state, destinationName: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}