{"ast":null,"code":"var _jsxFileName = \"/Users/oluwafemiadewole/Documents/traveler/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport SearchIcon from \"./customicons/SearchIcon\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionTypes } from \"../redux/constants/action-types\";\nimport { getNewsError, getNewsSuccess, getRecreationError, getRecreationSuccess, getWeatherError, getWeatherSuccess } from \"../redux/actions/actionFunctions\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const [userDestination, setUserDestination] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUserDestination(\"\");\n    navigate(\"/weather\");\n  };\n\n  const weatherKey = \"0c9c9e2407f1a94c5c8cf77596a04d49\";\n  useEffect(() => {\n    if (userDestination.length > 4) {\n      dispatch({\n        type: ActionTypes.DESTINATION_NAME,\n        payload: userDestination\n      });\n\n      const myWeather = async dispatch => {\n        dispatch({\n          type: ActionTypes.FETCH_DATA_START\n        });\n\n        try {\n          const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?units=metric&q=${userDestination}&appid=${weatherKey}`);\n          dispatch(getWeatherSuccess(response === null || response === void 0 ? void 0 : response.data));\n        } catch (error) {\n          dispatch(getWeatherError(error.message));\n          console.log(error.message);\n        }\n      };\n\n      const myNews = async dispatch => {\n        dispatch({\n          type: ActionTypes.FETCH_DATA_START\n        });\n\n        try {\n          const response = await axios.get(`https://newsdata.io/api/1/news?apikey=pub_485704ff05edfdaadd7c5c5cc82ec1222110&q=${userDestination}`);\n          dispatch(getNewsSuccess(response === null || response === void 0 ? void 0 : response.data.results));\n          console.log(response);\n        } catch (error) {\n          dispatch(getNewsError(error.message));\n        }\n      };\n\n      const recreationalURL = `https://travel-advisor.p.rapidapi.com/locations/search`;\n      const options = {\n        params: {\n          query: userDestination,\n          limit: \"30\",\n          offset: \"0\",\n          units: \"km\",\n          location_id: \"1\",\n          currency: \"USD\",\n          sort: \"relevance\",\n          lang: \"en_US\"\n        },\n        headers: {\n          \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"27373532bbmsh2cb6f90e496eb8dp16df81jsn642c4f59d8ae\"\n        }\n      };\n\n      const myAttractions = async dispatch => {\n        dispatch({\n          type: ActionTypes.FETCH_DATA_START\n        });\n\n        try {\n          const response = await axios.get(recreationalURL, options);\n          dispatch(getRecreationSuccess(response === null || response === void 0 ? void 0 : response.data.data));\n          console.log(response);\n        } catch (error) {\n          dispatch(getRecreationError(error.message));\n          console.log(error.message);\n        }\n      };\n\n      dispatch(myWeather);\n      dispatch(myNews);\n      dispatch(myAttractions);\n    }\n  }, [userDestination, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-nav\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-nav-input\",\n        type: \"text\",\n        id: \"search\",\n        onChange: e => setUserDestination(e.target.value),\n        placeholder: \"Where are you travelling to?\",\n        value: userDestination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"search-icon\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"ZuqwCeDaRDDWCV0E2uwLFdMJVgM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/oluwafemiadewole/Documents/traveler/src/components/SearchBar.js"],"names":["React","useEffect","useState","SearchIcon","axios","useDispatch","ActionTypes","getNewsError","getNewsSuccess","getRecreationError","getRecreationSuccess","getWeatherError","getWeatherSuccess","useNavigate","SearchBar","userDestination","setUserDestination","dispatch","navigate","handleSubmit","e","preventDefault","weatherKey","length","type","DESTINATION_NAME","payload","myWeather","FETCH_DATA_START","response","get","data","error","message","console","log","myNews","results","recreationalURL","options","params","query","limit","offset","units","location_id","currency","sort","lang","headers","myAttractions","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,kCAPP;AAQA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMe,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,GAJD;;AAKA,QAAMI,UAAU,GAAG,kCAAnB;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,eAAe,CAACQ,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAElB,WAAW,CAACmB,gBADX;AAEPC,QAAAA,OAAO,EAAEX;AAFF,OAAD,CAAR;;AAIA,YAAMY,SAAS,GAAG,MAAOV,QAAP,IAAoB;AACpCA,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAElB,WAAW,CAACsB;AAApB,SAAD,CAAR;;AACA,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CACpB,kEAAiEf,eAAgB,UAASO,UAAW,EADjF,CAAvB;AAIAL,UAAAA,QAAQ,CAACL,iBAAiB,CAACiB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAX,CAAlB,CAAR;AACD,SAND,CAME,OAAOC,KAAP,EAAc;AACdf,UAAAA,QAAQ,CAACN,eAAe,CAACqB,KAAK,CAACC,OAAP,CAAhB,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,OAAlB;AACD;AACF,OAZD;;AAcA,YAAMG,MAAM,GAAG,MAAOnB,QAAP,IAAoB;AACjCA,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAElB,WAAW,CAACsB;AAApB,SAAD,CAAR;;AACA,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CACpB,oFAAmFf,eAAgB,EAD/E,CAAvB;AAIAE,UAAAA,QAAQ,CAACT,cAAc,CAACqB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAV,CAAeM,OAAhB,CAAf,CAAR;AAEAH,UAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,SARD,CAQE,OAAOG,KAAP,EAAc;AACdf,UAAAA,QAAQ,CAACV,YAAY,CAACyB,KAAK,CAACC,OAAP,CAAb,CAAR;AACD;AACF,OAbD;;AAeA,YAAMK,eAAe,GAAI,wDAAzB;AAEA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE1B,eADD;AAEN2B,UAAAA,KAAK,EAAE,IAFD;AAGNC,UAAAA,MAAM,EAAE,GAHF;AAINC,UAAAA,KAAK,EAAE,IAJD;AAKNC,UAAAA,WAAW,EAAE,GALP;AAMNC,UAAAA,QAAQ,EAAE,KANJ;AAONC,UAAAA,IAAI,EAAE,WAPA;AAQNC,UAAAA,IAAI,EAAE;AARA,SADM;AAWdC,QAAAA,OAAO,EAAE;AACP,6BAAmB,+BADZ;AAEP,4BACE;AAHK;AAXK,OAAhB;;AAiBA,YAAMC,aAAa,GAAG,MAAOjC,QAAP,IAAoB;AACxCA,QAAAA,QAAQ,CAAC;AAAEO,UAAAA,IAAI,EAAElB,WAAW,CAACsB;AAApB,SAAD,CAAR;;AACA,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAUQ,eAAV,EAA2BC,OAA3B,CAAvB;AACAtB,UAAAA,QAAQ,CAACP,oBAAoB,CAACmB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAV,CAAeA,IAAhB,CAArB,CAAR;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,SAJD,CAIE,OAAOG,KAAP,EAAc;AACdf,UAAAA,QAAQ,CAACR,kBAAkB,CAACuB,KAAK,CAACC,OAAP,CAAnB,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,OAAlB;AACD;AACF,OAVD;;AAYAhB,MAAAA,QAAQ,CAACU,SAAD,CAAR;AACAV,MAAAA,QAAQ,CAACmB,MAAD,CAAR;AACAnB,MAAAA,QAAQ,CAACiC,aAAD,CAAR;AACD;AACF,GAtEQ,EAsEN,CAACnC,eAAD,EAAkBE,QAAlB,CAtEM,CAAT;AAwEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,QAHL;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAOJ,kBAAkB,CAACI,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAJrC;AAKE,QAAA,WAAW,EAAC,8BALd;AAME,QAAA,KAAK,EAAErC;AANT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,mBACG,GADH,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvGQD,S;UAGUT,W,EACAQ,W;;;KAJVC,S;AAyGT,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport SearchIcon from \"./customicons/SearchIcon\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionTypes } from \"../redux/constants/action-types\";\nimport {\n  getNewsError,\n  getNewsSuccess,\n  getRecreationError,\n  getRecreationSuccess,\n  getWeatherError,\n  getWeatherSuccess,\n} from \"../redux/actions/actionFunctions\";\nimport { useNavigate } from \"react-router\";\n\nfunction SearchBar() {\n  const [userDestination, setUserDestination] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUserDestination(\"\");\n    navigate(\"/weather\");\n  };\n  const weatherKey = \"0c9c9e2407f1a94c5c8cf77596a04d49\";\n  useEffect(() => {\n    if (userDestination.length > 4) {\n      dispatch({\n        type: ActionTypes.DESTINATION_NAME,\n        payload: userDestination,\n      });\n      const myWeather = async (dispatch) => {\n        dispatch({ type: ActionTypes.FETCH_DATA_START });\n        try {\n          const response = await axios.get(\n            `https://api.openweathermap.org/data/2.5/weather?units=metric&q=${userDestination}&appid=${weatherKey}`\n          );\n\n          dispatch(getWeatherSuccess(response?.data));\n        } catch (error) {\n          dispatch(getWeatherError(error.message));\n          console.log(error.message);\n        }\n      };\n\n      const myNews = async (dispatch) => {\n        dispatch({ type: ActionTypes.FETCH_DATA_START });\n        try {\n          const response = await axios.get(\n            `https://newsdata.io/api/1/news?apikey=pub_485704ff05edfdaadd7c5c5cc82ec1222110&q=${userDestination}`\n          );\n\n          dispatch(getNewsSuccess(response?.data.results));\n\n          console.log(response);\n        } catch (error) {\n          dispatch(getNewsError(error.message));\n        }\n      };\n\n      const recreationalURL = `https://travel-advisor.p.rapidapi.com/locations/search`;\n\n      const options = {\n        params: {\n          query: userDestination,\n          limit: \"30\",\n          offset: \"0\",\n          units: \"km\",\n          location_id: \"1\",\n          currency: \"USD\",\n          sort: \"relevance\",\n          lang: \"en_US\",\n        },\n        headers: {\n          \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"27373532bbmsh2cb6f90e496eb8dp16df81jsn642c4f59d8ae\",\n        },\n      };\n      const myAttractions = async (dispatch) => {\n        dispatch({ type: ActionTypes.FETCH_DATA_START });\n        try {\n          const response = await axios.get(recreationalURL, options);\n          dispatch(getRecreationSuccess(response?.data.data));\n          console.log(response);\n        } catch (error) {\n          dispatch(getRecreationError(error.message));\n          console.log(error.message);\n        }\n      };\n\n      dispatch(myWeather);\n      dispatch(myNews);\n      dispatch(myAttractions);\n    }\n  }, [userDestination, dispatch]);\n\n  return (\n    <div className='search-nav'>\n      <form onSubmit={handleSubmit}>\n        <input\n          className='search-nav-input'\n          type='text'\n          id='search'\n          onChange={(e) => setUserDestination(e.target.value)}\n          placeholder='Where are you travelling to?'\n          value={userDestination}\n        />\n\n        <span className='search-icon'>\n          {\" \"}\n          <SearchIcon />\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}