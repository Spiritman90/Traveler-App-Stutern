{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch(url).then(resp => {\n      if (resp.ok === false) {\n        throw Error(\"Could not fetch the Data!!!\");\n      }\n\n      return resp.json();\n    }).then(data => {\n      setData(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [url]);\n  return [data, loading, error];\n};\n\n_s(useFetch, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/oluwafemiadewole/Documents/traveler/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","loading","setLoading","error","setError","fetch","then","resp","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAG,IAAAA,KAAK,CAACP,GAAD,CAAL,CACGQ,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,EAAL,KAAY,KAAhB,EAAuB;AACrB,cAAMC,KAAK,CAAC,6BAAD,CAAX;AACD;;AACD,aAAOF,IAAI,CAACG,IAAL,EAAP;AACD,KANH,EAOGJ,IAPH,CAOSP,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVH,EAWGS,KAXH,CAWUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdH;AAeD,GAlBQ,EAkBN,CAACJ,GAAD,CAlBM,CAAT;AAmBA,SAAO,CAACC,IAAD,EAAOE,OAAP,EAAgBE,KAAhB,CAAP;AACD,CAzBD;;GAAMN,Q;;AA2BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetch(url)\n      .then((resp) => {\n        if (resp.ok === false) {\n          throw Error(\"Could not fetch the Data!!!\");\n        }\n        return resp.json();\n      })\n      .then((data) => {\n        setData(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, [url]);\n  return [data, loading, error];\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}